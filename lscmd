#!/bin/sh
#
# List commands from PATH.
#
# MIT License
# 
# Copyright (c) 2019 Jude Melton-Houghton
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

print_usage() {
	echo "Usage: $0 [options] [--] [paths]..."
}

print_help() {
	print_usage
	cat <<HELP

Print list of commands. If no paths are given, PATH is searched. If paths are
given (in the same format as the PATH variable,) each one is searched. The given
paths are assumed to contain commands.

Options:
  --help     Print this help information.
  --version  Print version information.
  --paths    Print executable paths rather than just names. If multiple commands
             with the same name exist, they are all printed in this mode.
  --null     Use NUL character to delimit output rather than the newline.
HELP
}

print_version() {
	echo "$0 version 1.0.2"
}

while test "$#" -gt 0; do
	case "$1" in
	--help)
		print_help
		exit 0
		;;
	--version)
		print_version
		exit 0
		;;
	--paths)
		print_paths=yes
		;;
	--null)
		null_term=yes
		;;
	--)
		shift
		break
		;;
	-*)
		echo >&2 "$0: Invalid option: $1"
		print_usage >&2
		echo >&2 "Use '$0 --help' for more information"
		exit 1
		;;
	*)
		break
		;;
	esac
	shift
done
if test "$#" -gt 0; then
	while test "$#" -gt 0; do
		paths="$1:$paths"
		shift
	done
else
	paths="$PATH:"
fi

printf %s "$paths" |
tr ':\n' '\n:' |
sed -E 's,^(-|$),./\1,' |
sort -u |
tr '\n:' '\0\n' |
xargs -0 sh -c 'exec find 2>/dev/null -L "$@" -maxdepth 1 -type f -print0' -- |
tr '\0\n' '\n\0' |
{ if test -n "$print_paths"
  then sort
  else sed -E 's,^.*/([^/]+)$,\1,' | sort -u
  fi } |
{ if test -n "$null_term"
  then tr '\n\0' '\0\n'
  else tr '\0' '\n'
  fi }
